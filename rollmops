#!/usr/bin/env python

from autobahn.twisted.websocket import WebSocketClientProtocol
from autobahn.twisted.websocket import WebSocketClientFactory
from autobahn.twisted.websocket import connectWS

from twisted.python import log
from twisted.internet import reactor
import sys
import os
import requests
import json


class MyClientProtocol(WebSocketClientProtocol):

    def onOpen(self):
        pass
        # self.sendMessage(u"Hello, world!".encode('utf8'))

    def onMessage(self, payload, isBinary):
        print("Text message received: {0}".format(payload.decode('utf8')))


def main():
    apikey = os.environ['ROLLMOPS_SLACK_API_KEY']
    requestURL = "http://slack.com/api/rtm.start?token=%s" % apikey

    res = requests.get(requestURL)
    try:
        json_reqsponse = json.loads(res.text)
    except:
        print
        print "received broken json from %s" % requestURL
        sys.exit(1)

    wssURL = json_reqsponse["url"]

    log.startLogging(sys.stdout)
    print requestURL

    factory = WebSocketClientFactory(wssURL)
    factory.protocol = MyClientProtocol

    connectWS(factory)
    reactor.run()

if __name__ == '__main__':
    main()
